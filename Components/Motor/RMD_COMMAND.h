#define Read_position_loop_Kp_parameters 0x30									  // 读取位置环Kp参数
#define Read_position_loop_Ki_parameters 0x31									  // 读取位置环Ki参数
#define Read_speed_loop_Kp_parameters 0x32										  // 读取速度环Kp参数
#define Read_speed_loop_Ki_parameters 0x33										  // 读取速度环Ki参数
#define Read_current_loop_Kp_parameters 0x34									  // 读取电流环Kp参数
#define Read_current_loop_Ki_parameters 0x35									  // 读取电流环Ki参数
#define Write_position_loop_Kp_parameters_to_RAM 0x36							  // 写入位置环Kp参数到RAM
#define Write_position_loop_Ki_parameters_to_RAM 0x37							  // 写入位置环Ki参数到RAM
#define Write_speed_loop_Kp_parameters_to_RAM 0x38								  // 写入速度环Kp参数到RAM
#define Write_speed_loop_Ki_parameters_to_RAM 0x39								  // 写入速度环Ki参数到RAM
#define Write_current_loop_Kp_parameters_to_RAM 0x3A							  // 写入电流环Kp参数到RAM
#define Write_current_loop_Ki_parameters_to_RAM 0x3B							  // 写入电流环Ki参数到RAM
#define Write_position_loop_Kp_parameters_to_ROM 0x3C							  // 写入位置环Kp参数到ROM
#define Write_position_loop_Ki_parameters_to_ROM 0x3D							  // 写入位置环Ki参数到ROM
#define Write_speed_loop_Kp_parameters_to_ROM 0x3E								  // 写入速度环Kp参数到ROM
#define Write_speed_loop_Ki_parameters_to_ROM 0x3F								  // 写入速度环Ki参数到ROM
#define Write_current_loop_Kp_parameters_to_ROM 0x40							  // 写入电流环Kp参数到ROM
#define Write_current_loop_Ki_parameters_to_ROM 0x41							  // 写入电流环Ki参数到ROM
#define Read_acceleration 0x42													  // 读取加速度
#define Write_acceleration_to_RAM 0x43											  // 写入加速度到RAM
#define Read_multi_turn_encoder_position 0x60									  // 读取多圈编码器位置
#define Read_multi_turn_encoder_original_position 0x61							  // 读取多圈编码器原始位置
#define Read_multi_turn_encoder_zero_offset 0x62								  // 读取多圈编码器零偏
#define Write_multi_turn_encoder_value_to_ROM_as_motor_zero_point 0x63			  // 写入多圈编码器值到ROM作为电机零点
#define Write_multi_turn_encoder_current_position_to_ROM_as_motor_zero_point 0x64 // 写入多圈编码器当前位置到ROM作为电机零点
#define Read_encoder 0x90														  // 读取编码器
#define Write_encoder_value_to_ROM_as_motor_zero_point 0x91						  // 写入编码器值到ROM作为电机零点
#define Write_current_position_to_ROM_as_motor_zero_point 0x19					  // 写入当前位置到ROM作为电机零点
#define Read_multi_turn_angle 0x92												  // 读取多圈角度
#define Read_single_turn_angle 0x94												  // 读取单圈角度
#define READ_MOTOR_STATUS_1 0x9A												  // 读取电机状态1和错误标志
#define READ_MOTOR_STATUS_2 0x9C												  // 读取电机状态2
#define READ_MOTOR_STATUS_3 0x9D												  // 读取电机状态3
#define Motor_off 0x80															  // 电机关闭
#define Motor_stopped 0x81														  // 电机停止
#define Motor_running 0x88														  // 电机运行
#define TORQUE_CONTROL 0xA1														  // 转矩闭环控制
#define Speed_closed_loop_control 0xA2											  // 速度闭环控制
#define Position_closed_loop_control_1 0xA3										  // 位置闭环控制1
#define Position_closed_loop_control_2 0xA4										  // 位置闭环控制2
#define Position_closed_loop_control_3 0xA5										  // 位置闭环控制3
#define Position_closed_loop_control_4 0xA6										  // 位置闭环控制4
#define Multi_turn_incremental_position_control 0xA7							  // 多圈增量位置控制
#define Multi_turn_incremental_position_control 0xA8							  // 多圈增量位置控制
#define Operation_mode_reading 0x70												  // 运行模式读取
#define Power_value_reading 0x71												  // 功率值读取
#define Battery_voltage_reading 0x72											  // 电池电压读取
#define TF_command 0x73															  // TF_指令
#define System_reset_command 0x76												  // 系统复位指令
#define Brake_opening_command 0x77												  // 抱闸开启指令
#define Brake_closing_command 0x78												  // 抱闸关闭指令
#define CANID_setting_and_reading 0x79											  // CANID设置和读取
