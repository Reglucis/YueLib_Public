void Pack_Data(uint8_t fun, uint8_t* data, uint8_t len)
{
	static uint8_t send_buf[32] = {0xAA, 0xAA};
	uint8_t i;
	if (len > 28)
		return;

	send_buf[2] = fun;
	send_buf[3] = len;

	memcpy(send_buf + 4, data, len);

	uint8_t sumcheck = 0;
	uint8_t addcheck = 0;

	for (i = 0; i < (len + 4); i++) {
		sumcheck += send_buf[i];
		addcheck += sumcheck;
	}
	send_buf[len + 4] = sumcheck;
	send_buf[len + 5] = addcheck;

	Debug_Transmit(send_buf, len + 6);
}

void Send_SensorData(int16_t dat1, int16_t dat2, int16_t dat3, uint8_t dat4)
{
	uint8_t tbuf[18];
	tbuf[0] = dat1 & 0XFF;
	tbuf[1] = (dat1 >> 8) & 0XFF;
	tbuf[2] = dat2 & 0XFF;
	tbuf[3] = (dat2 >> 8) & 0XFF;
	tbuf[4] = dat3 & 0XFF;
	tbuf[5] = (dat3 >> 8) & 0XFF;
	tbuf[6] = dat4 & 0XFF;
	Pack_Data(0x03, tbuf, 7);
}

void UART_sendtoANO_eular(int16_t dat1, int16_t dat2, int16_t dat3, uint8_t dat4)
{
}

void UART_sendtoANO_quat(int16_t dat1, int16_t dat2, int16_t dat3, int16_t dat4, uint8_t dat5)
{
}

void Send_SensorData_quat(int16_t dat1, int16_t dat2, int16_t dat3, int16_t dat4, uint8_t dat5)
{
	uint8_t tbuf[18];
	tbuf[0] = dat1 & 0XFF;
	tbuf[1] = (dat1 >> 8) & 0XFF;
	tbuf[2] = dat2 & 0XFF;
	tbuf[3] = (dat2 >> 8) & 0XFF;
	tbuf[4] = dat3 & 0XFF;
	tbuf[5] = (dat3 >> 8) & 0XFF;
	tbuf[6] = dat4 & 0XFF;
	tbuf[7] = (dat4 >> 8) & 0XFF;
	tbuf[8] = dat5 & 0XFF;
	Pack_Data(0x04, tbuf, 9);
}
