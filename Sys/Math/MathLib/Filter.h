/*****************************************************************************************************
 * @file        
 * @author      
 * @version     
 * @date        
 * @brief       
 * @email		
 ****************************************************************************************************
 * @details 	
 * 			
 * 		
 ***************************************************************************************************/

#ifndef __Filter__
#define __Filter__

#include <stdint.h>
#include <stdbool.h>

#include "stm32f4xx_hal.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////// ⬇ ⬇ ⬇ ⬇ ⬇ ⬇ ////    配  置  区    //// ⬇ ⬇ ⬇ ⬇ ⬇ ⬇ ///////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////// ⬇ ⬇ ⬇ ⬇ ⬇ ⬇ ////  非  配  置  区  //// ⬇ ⬇ ⬇ ⬇ ⬇ ⬇ ///////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct __KalmanFilter_1D_t__ KalmanFilter_1D_t;
typedef struct __ButterworthFilter_t__ BWFilter_t;

/*------------------------------------------------------------ 变量类型 ------------------------------------------------------------*/

/*------------------------------------------------------------ 函数声明 ------------------------------------------------------------*/
KalmanFilter_1D_t* New_Kalman1d(float q, float r);
float solve_KalmanFilter_1D(KalmanFilter_1D_t* filter, float measure);
BWFilter_t* New_BWLPF(int n, float s, float f);
float solve_BWLPFilter(BWFilter_t* filter, float measure);
#endif
